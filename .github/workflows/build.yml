name: Build and Release
run-name: Build and Release
on: [push]
permissions:
  contents: write
jobs:
  Build-and-release:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: client/yarn.lock

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: icons/yarn.lock

      - name: Build icons
        working-directory: './icons'
        run: yarn install && yarn build

      - name: Build client
        working-directory: './client'
        run: |
          yarn install
          yarn build:varia
          mv dist client
          tar -czvf release.tar.gz client

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release_${{ github.run_number }}
          release_name: release_${{ github.run_number }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client/release.tar.gz
          asset_name: release.tar.gz
          asset_content_type: application/gzip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}